package libheaven.core.marc

import org.junit.Test
import org.junit.Assert

class MonoDescrTest extends RecordTestBase {

  // Examples from http://www.rusmarc.ru/rusmarc/format.html

  @Test
  def test200_1 = {
    val example = rusmarcRecord(Array(
        ("010", ' ', ' ', Array(
          ('b', "В пер."), 
          ('d', "3 р. 70 к."), 
          ('9', "1000000 экз.")
        )),
        ("200", '1', ' ',Array(
          ('a', "Дым"), 
          ('a', "Новь"), 
          ('a', "Вешние воды"), 
          ('a', "Стихотворения в прозе"),
          ('f', "И.С.Тургенев"), 
          ('g', "вступ. ст. и примеч. А. Чичерина"), 
          ('g', "худож. В. Домогацкий")
        )),
        ("210", '1', ' ', Array(
          ('a', "Москва"), 
          ('c', "Художественная литература"), 
          ('d', "1981")
        )),
        ("215", ' ', ' ', Array(
            ('a', "608 с., 7 л. ил."), 
            ('d', "20 см.")
        )),
        ("225", '2', ' ', Array(
            ('a', "Библиотека классики"), 
            ('f', "редкол.: Алексеев М. П. [и др.]"), 
            ('i', "Русская литература")
        )),
        ("700", ' ', '1', Array(
            ('a', "Тургенев"), 
            ('b', "И. С."), 
            ('g', "Иван Сергеевич")
         ))
        
    )) 
    val expected = "Дым ; Новь ; Вешние воды ; Стихотворения в прозе / И.С.Тургенев ; вступ. ст. и примеч. А. Чичерина ; худож. В. Домогацкий. – Москва : Художественная литература, 1981. – 608 с., 7 л. ил. ; 20 см. – (Библиотека классики / редкол.: Алексеев М. П. [и др.]. Русская литература). – 1000000 экз. – (В пер.) : 3 р. 70 к."
    val actual = example.multiLevelDescription(null)
    println(actual)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test200_2 = {
    val example = rusmarcRecord ( Array(
        ("200", '1', ' ', Array(
          ('a', "Геометрия. Стереометрия"), 
          ('e', "10-11 классы"), 
          ('e', "учебник и задачник"), 
          ('f', "Киселев А.П., Рыбкин Н.А.")
          ))
    ))
    val expected = "Геометрия. Стереометрия : 10-11 классы : учебник и задачник / Киселев А.П., Рыбкин Н.А."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test200_3 = {
    val example = rusmarcRecord( Array(
        ("200", '1', ' ', Array(
              ('a', "Проблемы криобиологии"), 
              ('e', "всесоюзный научно-теоретический журнал"), 
              ('f', "АН СССР, Отд-ние физиологии, АН УССР, Отд-ние биохимии, физиологии и теорет. медицины")
          ))
    ))
    val expected = "Проблемы криобиологии : всесоюзный научно-теоретический журнал / АН СССР, Отд-ние физиологии, АН УССР, Отд-ние биохимии, физиологии и теорет. медицины."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test200_5 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ',  Array(
              ('a', "Количественная оценка качества продукции - квалиметрия"), 
              ('e', "(некоторые актуальные проблемы)"), 
              ('f', "Г. Г. Азгальдов")
          )),
        ("423", ' ', '0', Array(
              ('1', "2001#$aОрганизационное обеспечение качества конструкторских разработок$eв помощь слушателям семинара по надежности и прогрессивным методам контроля качества промышленных изделий при Политехническом музее$fВ. П. Баранчеев$gГос. ком. СССР по стандартам, Всесоюз. совет науч.-техн. о-в"),
              ('1', "700#1$aБаранчеев$bВ. П.$171212$aСССР$bКомитет по стандартам"), 
              ('1', "71202$aВсесоюзный совет научно-технических обществ")
          )),
        ("423", ' ', '0', Array(
              ('1', "2001#$aОбобщенные показатели при исследовании сложных систем$fИ. Б. Погожев, В. Л. Аничкина"),
              ('1', "700#1$aПогожев$bИ. Б."), 
              ('1', "701#1$aАничкина$bВ. Л.") 
          ))
    ))
    val expected = "Количественная оценка качества продукции - квалиметрия : (некоторые актуальные проблемы) / Г. Г. Азгальдов. Обобщенные показатели при исследовании сложных систем / И. Б. Погожев, В. Л. Аничкина. Организационное обеспечение качества конструкторских разработок : в помощь слушателям семинара по надежности и прогрессивным методам контроля качества промышленных изделий при Политехническом музее / В. П. Баранчеев ; Гос. ком. СССР по стандартам, Всесоюз. совет науч.-техн. о-в."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test200_6 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Выбор нормативов пооперационно сменно-суточного планирования на базе имитационного моделирования"), 
              ('f', "[разраб. И.В. Брежнева]")
          )),
        ("210", ' ', ' ', Array(
              ('a', "Москва"),
              ('c', "НИАТ"), 
              ('d', "1978") 
          )),
        ("215", ' ', ' ', Array(
              ('a', "47 с., 1 л. схем."),
              ('d', "21 см."), 
              ('e', "прил. (21 с. ; 28 см.)") 
          )),
        ("225", '1', ' ', Array(
              ('a', "Методические материалы"),
              ('f', "НИИ технологии и орг. пр-ва."), 
              ('i', "Экономика") 
          )),
        ("300", ' ', ' ', Array(
              ('a', "Загл. прил.: Программы для расчета плана-графика обработки деталей при вариации различных параметров, составленные на языке ФОРТРАН для машины \"Минск-32\"")
          ))
    ))
    val expected = "Выбор нормативов пооперационно сменно-суточного планирования на базе имитационного моделирования / [разраб. И.В. Брежнева]. – Москва : НИАТ, 1978. – 47 с., 1 л. схем. ; 21 см. + прил. (21 с. ; 28 см.). – (Методические материалы / НИИ технологии и орг. пр-ва. Экономика). – Загл. прил.: Программы для расчета плана-графика обработки деталей при вариации различных параметров, составленные на языке ФОРТРАН для машины \"Минск-32\"."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test225_1 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Легенда горного ручья"), 
              ('a', "Рассказы о привидениях"), 
              ('f', "К. Кин"), 
              ('g', "[пер. с англ. А.Литвиновой, С.Литвиновой"), 
              ('g', "худож. В.Иванов]")
          )),
        ("210", ' ', ' ', Array(
              ('a', "Москва"), 
              ('c', "Совершенно секретно"),
              ('d', "1995") 
          )),
        ("215", ' ', ' ', Array(
              ('a', "269, [2] c."), 
              ('d', "21 см.")
          )),
        ("225", '1', ' ', Array(
              ('a', "Нэнси Дру"), 
              ('v', "5") 
          )),
        ("225", '1', ' ', Array(
              ('a', "Детский детектив") 
          ))
    ))
    val expected = "Легенда горного ручья ; Рассказы о привидениях / К. Кин ; [пер. с англ. А.Литвиновой, С.Литвиновой ; худож. В.Иванов]. – Москва : Совершенно секретно, 1995. – 269, [2] c. ; 21 см. – (Нэнси Дру ; 5) (Детский детектив)."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test225_2 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Художники Витебска"), 
              ('d', "Artists from Vitebsk"), 
              ('e', "Иугуда Пэн и его ученики"), 
              ('e', "[альбом]"), 
              ('z', "eng")
          )),
        ("210", ' ', ' ', Array(
              ('a', "Москва"), 
              ('c', "Имидж"),
              ('d', "[1992]") 
          )),
        ("215", ' ', ' ', Array(
              ('a', "76, [303] с."), 
              ('c', "ил., цв. ил., портр."),
              ('d', "20см.")
          )),
        ("225", '1', ' ', Array(
              ('a', "Шедевры европейского искусства"), 
              ('d', "Masterpieces of jewish art") ,
              ('v', "2") ,
              ('z', "eng") 
          ))
    ))
    val expected = "Художники Витебска = Artists from Vitebsk : Иугуда Пэн и его ученики : [альбом]. – Москва : Имидж, [1992]. – 76, [303] с. : ил., цв. ил., портр. ; 20см. – (Шедевры европейского искусства = Masterpieces of jewish art ; 2)."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test225_3 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Математическое обеспечение для проектирования СВЧ-транзисторных генераторов и усилителей мощности"), 
              ('e', "(по данным отеч. и зарубеж. печати за 1971-1992 гг.)"), 
              ('f', "Балыко А. К., Юсупова Н. И.")
          )),
        ("225", '2', ' ', Array(
              ('a', "Обзоры по электронной технике"), 
              ('f', "ЦНИИ \"Электроника\"") ,
              ('v', "вып. 1704")
          )),
        ("461", ' ', '1', Array(
              ('1', "001000002"), 
              ('1', "2001#$aОбзоры по электронной технике$fЦНИИ \"Электроника\"$vвып. 1704")
          )),
       ("462", ' ', '1', Array(
              ('1', "001000003"), 
              ('1', "2001#$aСВЧ-техника$vвып. 6"),
              ('1', "2252#$aОбзоры по электрон. технике$fЦНИИ \"Электроника\"$vСерия 1")
          ))
    ))
    val expected = "Математическое обеспечение для проектирования СВЧ-транзисторных генераторов и усилителей мощности : (по данным отеч. и зарубеж. печати за 1971-1992 гг.) / Балыко А. К., Юсупова Н. И. – (Обзоры по электронной технике / ЦНИИ \"Электроника\" ; вып. 1704. Серия 1, СВЧ-техника ; вып. 6)."
    val actual = example.multiLevelDescription(null)
    // TODO: 462 not processed
//    Assert.assertEquals(expected, actual)
  }

  @Test
  def test225_4 = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Миноритарные языки в образовании"), 
              ('e', "(типология языковой политики)") 
          )),
        ("210", ' ', ' ', Array(
              ('a', "Москва"), 
              ('c', "ИНПО"), 
              ('d', "1995")
          )),
        ("215", ' ', ' ', Array(
              ('a', "62 с."), 
              ('d', "20 см.")
          )),
        ("225", '1', ' ', Array(
              ('a', "Общество и образование в современном мире"), 
              ('e', "сборник материалов из зарубежного опыта"), 
              ('f', "Ин-т нац. пробл. образования") ,
              ('v', "вып. 5")
          ))
    ))
    val expected = "Миноритарные языки в образовании : (типология языковой политики). – Москва : ИНПО, 1995. – 62 с. ; 20 см. – (Общество и образование в современном мире : сборник материалов из зарубежного опыта / Ин-т нац. пробл. образования ; вып. 5)."
    val actual = example.multiLevelDescription(null)
    Assert.assertEquals(expected, actual)
  }
  
  @Test
  def test_resume = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Die Lupine. Geschichte und Evolution einer Kulturpfulanze")
          )),
        ("210", ' ', ' ', Array(
              ('a', "Braunschweig"), 
              ('d', "1996")
          )),
        ("215", ' ', ' ', Array(
              ('a', "247, [2] c."), 
              ('c', "ил., карт.")
          )),
        ("225", '2', ' ', Array(
              ('a', "Landbauforschung Volkenrode"), 
              ('e', "Wiss. Mitt. der Bundesfor schungsanstalt fur Landwirschaft Braunschweig - Volkenrode (FAL)"), 
              ('x', "ISSN 0376-0723"), 
              ('v', "S.-H. 162")
          )),
        ("300", ' ', ' ', Array(
              ('a', "На обл. авт. не указан") 
          )),
        ("300", ' ', ' ', Array(
              ('a', "Текст нем.") 
          )),
        ("320", ' ', ' ', Array(
              ('a', "Указ.: с. 243-247. Библиогр.: с. 220-242") 
          )),
        ("330", ' ', ' ', Array(
              ('a', "Монография по люпину : история возделывания и эволюции культурного растения (ФРГ)") 
          ))
    ))
    val expected = "Die Lupine. Geschichte und Evolution einer Kulturpfulanze. – Braunschweig, 1996. – 247, [2] c. : ил., карт. – (Landbauforschung Volkenrode : Wiss. Mitt. der Bundesfor schungsanstalt fur Landwirschaft Braunschweig - Volkenrode (FAL), ISSN 0376-0723 ; S.-H. 162)" +
        ". – На обл. авт. не указан. – Текст нем. – Указ.: с. 243-247. Библиогр.: с. 220-242" +
        "\nМонография по люпину : история возделывания и эволюции культурного растения (ФРГ)."
    val actual = example.multiLevelDescription(null)
    println(actual)
    Assert.assertEquals(expected, actual)
  }

  @Test
  def test_noresume = {
    val example = rusmarcRecord(Array(
        ("200", '1', ' ', Array(
              ('a', "Die Lupine. Geschichte und Evolution einer Kulturpfulanze")
          )),
        ("210", ' ', ' ', Array(
              ('a', "Braunschweig"), 
              ('d', "1996")
          )),
        ("215", ' ', ' ', Array(
              ('a', "247, [2] c."), 
              ('c', "ил., карт.")
          )),
        ("225", '2', ' ', Array(
              ('a', "Landbauforschung Volkenrode"), 
              ('e', "Wiss. Mitt. der Bundesfor schungsanstalt fur Landwirschaft Braunschweig - Volkenrode (FAL)"), 
              ('x', "ISSN 0376-0723"), 
              ('v', "S.-H. 162")
          )),
        ("300", ' ', ' ', Array(
              ('a', "На обл. авт. не указан") 
          )),
        ("300", ' ', ' ', Array(
              ('a', "Текст нем.") 
          )),
        ("320", ' ', ' ', Array(
              ('a', "Указ.: с. 243-247. Библиогр.: с. 220-242") 
          )),
        ("330", ' ', ' ', Array(
              ('a', "Монография по люпину : история возделывания и эволюции культурного растения (ФРГ)") 
          ))
    ))
    val expected = "Die Lupine. Geschichte und Evolution einer Kulturpfulanze. – Braunschweig, 1996. – 247, [2] c. : ил., карт. – (Landbauforschung Volkenrode : Wiss. Mitt. der Bundesfor schungsanstalt fur Landwirschaft Braunschweig - Volkenrode (FAL), ISSN 0376-0723 ; S.-H. 162)" +
        ". – На обл. авт. не указан. – Текст нем. – Указ.: с. 243-247. Библиогр.: с. 220-242."
    val actual = example.removeResume.asInstanceOf[RusmarcRecord].multiLevelDescription(null)
    println(actual)
    Assert.assertEquals(expected, actual)
  }
  
}